name: Staging Function Deployment

on:
  push:
    branches:
      - main

env:
  FUNCTION_APP_NAME: bootcampbfuncappstag2
  RESOURCE_GROUP_NAME: alexBootcampBenchmarkStaging

jobs:
  TestAndLint:
    runs-on: ubuntu-latest
    name: Test and Lint

    steps:
      - name: checkout code
        uses: actions/checkout@v3

      - name: setup python with pip dependency cache
        uses: actions/setup-python@v4
        with:
          python-version: 3.8
          cache: "pip"

      - name: install dependencies
        shell: bash
        run: pip install -r requirements.txt

      # - name: prune dependencies
      #   run: make prune

      - name: lint
        run: make lint

      - name: test
        run: make dock && make unit_test
        env:
          PSQL_CONNECTIONSTRING: "host='localhost' user='db_admin' password='password123' dbname='test_db'"

      - name: function conformity
        run: make func_check

  StagingFunctionDeployment:
    runs-on: ubuntu-latest
    needs: TestAndLint
    name: Staging Functions Deployment

    steps:
      - name: checkout code
        uses: actions/checkout@v3

      - name: setup python with pip dependency cache
        uses: actions/setup-python@v4
        with:
          python-version: 3.8
          cache: "pip"

      - name: install python dependencies
        shell: bash
        run: |
          pushd './.'
          pip install -r requirements.txt --target=".python_packages/lib/site-packages"
          popd

      - name: azure login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS_2 }}

      - name: get function app publish profile
        id: profilevar
        run: |
          publish_profile=$(az functionapp deployment list-publishing-profiles --name ${{ env.FUNCTION_APP_NAME }} --resource-group ${{ env.RESOURCE_GROUP_NAME }}  --xml)
          echo "publish_profile=$publish_profile" >> $GITHUB_OUTPUT

      - name: run azure functions action
        uses: Azure/functions-action@v1
        with:
          app-name: ${{ env.FUNCTION_APP_NAME}}
          publish-profile: ${{ steps.profilevar.outputs.publish_profile }}
          scm-do-build-during-deployment: true
          enable-oryx-build: false
